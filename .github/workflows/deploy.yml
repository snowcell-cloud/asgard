name: Build, Push, and Deploy to K8s

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: eu-north-1
      ECR_REGISTRY: 637423187518.dkr.ecr.eu-north-1.amazonaws.com
      ECR_REPOSITORY: asgard
      IMAGE_TAG: latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build Docker image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

      - name: Push Docker image to ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: latest

      - name: Setup kubeconfig
        run: |
          mkdir -p ~/.kube
          # Try to decode as base64, if it fails, treat as plain text
          if echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config 2>/dev/null; then
            echo "Kubeconfig decoded from base64"
          else
            echo "Using kubeconfig as plain text"
            echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          fi
          chmod 600 ~/.kube/config

      - name: Deploy to Kubernetes with Helm
        run: |
          helm upgrade --install asgard-app ./helmchart \
            --set image.repository=$ECR_REGISTRY/$ECR_REPOSITORY \
            --set image.tag=$IMAGE_TAG \
            --namespace asgard \
            --create-namespace --force
