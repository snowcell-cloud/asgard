---
# ServiceAccount for ECR secret management
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ecr-secret-updater
  namespace: asgard
  labels:
    app: ecr-credentials
    component: secret-manager

---
# Role for managing secrets
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ecr-secret-manager
  namespace: asgard
  labels:
    app: ecr-credentials
    component: rbac
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
    resourceNames: ["ecr-credentials"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create"]

---
# RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ecr-secret-manager-binding
  namespace: asgard
  labels:
    app: ecr-credentials
    component: rbac
subjects:
  - kind: ServiceAccount
    name: ecr-secret-updater
    namespace: asgard
roleRef:
  kind: Role
  name: ecr-secret-manager
  apiGroup: rbac.authorization.k8s.io

---
# Optional: CronJob to refresh ECR credentials every 11 hours
# ECR tokens expire after 12 hours
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ecr-secret-refresh
  namespace: asgard
  labels:
    app: ecr-credentials
    component: cronjob
spec:
  schedule: "0 */11 * * *" # Every 11 hours
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: ecr-credentials
            component: refresh-job
        spec:
          serviceAccountName: ecr-secret-updater
          restartPolicy: OnFailure
          containers:
            - name: ecr-secret-refresh
              image: amazon/aws-cli:latest
              env:
                - name: ECR_REGISTRY
                  value: "637423187518.dkr.ecr.eu-north-1.amazonaws.com"
                - name: AWS_REGION
                  value: "eu-north-1"
                - name: NAMESPACE
                  value: "asgard"
              command:
                - /bin/sh
                - -c
                - |
                  set -e
                  echo "Refreshing ECR credentials..."

                  # Get ECR login password
                  ECR_PASSWORD=$(aws ecr get-login-password --region ${AWS_REGION})

                  # Create docker config
                  DOCKER_CONFIG=$(echo "{\"auths\":{\"${ECR_REGISTRY}\":{\"username\":\"AWS\",\"password\":\"${ECR_PASSWORD}\"}}}" | base64 -w 0)

                  # Update or create secret
                  kubectl delete secret ecr-credentials -n ${NAMESPACE} --ignore-not-found=true
                  kubectl create secret generic ecr-credentials \
                    --from-literal=.dockerconfigjson="${DOCKER_CONFIG}" \
                    --type=kubernetes.io/dockerconfigjson \
                    -n ${NAMESPACE}

                  echo "ECR credentials refreshed successfully"
